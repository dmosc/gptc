# This YAML file builds and distributes a cross-platform application called "gptc" using GitHub Actions.
name: "Build distributions for major OS"

# Specifies the trigger for the workflow.
on:
  push:
    branches:
      - main

# Defines the build and upload jobs for the gptc application.
jobs:
  build_binaries:
    # Runs the job on the specified operating system using a matrix.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Specifies the latest version of Windows to use for the build.
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    steps:
      # Checks out the repository.
      - name: "Checkout repository"
        uses: actions/checkout@v3

      # Installs dependencies for the specified OS.
      - name: "Install dependencies"
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            echo "Building for Linux."
            sudo apt update
            sudo apt install -y libxcb-shape0-dev libxcb-xfixes0-dev
          elif [ "$RUNNER_OS" = "Windows" ]; then
            echo "Building for Windows."
            # choco install -y xcb-shape xcb-util-wm
          elif [ "$RUNNER_OS" = "macOS" ]; then
            echo "Building for macOS."
          else
            echo "OS $RUNNER_OS not supported."
          fi
        shell: "bash"

      # Builds the gptc application.
      - name: "Build application"
        run: |
          cargo build --release --target-dir "dist/${{ matrix.os }}"
        shell: "bash"

      # Uploads the built binary to the artifact storage.
      - name: "Upload binary ${{ matrix.os }}"
        uses: actions/upload-artifact@master
        with:
          name: "gptc-${{ matrix.os }}"
          path: |
            dist/${{ matrix.os }}/release/gptc.exe
            dist/${{ matrix.os }}/release/gptc

  # Defines the job to open a pull request after successful build and upload.
  open_pull_request:
    runs-on: ubuntu-latest
    needs: "build_binaries"

    # Grants write access to the repository content and pull requests.
    permissions:
      contents: write
      pull-requests: write

    steps:
      # Checks out the repository.
      - name: "Checkout repository"
        uses: actions/checkout@v3

      # Downloads the uploaded binary artifact from the previous build job.
      - name: "Download binaries"
        uses: actions/download-artifact@master

      # Commits the changes and opens a pull request.
      - name: "Commit changes and open pull request"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Sets the name and email of the user for committing the changes.
          # Found the `user.email` and `user.name` attributes to reference "Github Bot" in
          # Github's UI.
          # https://github.com/orgs/community/discussions/26560#discussioncomment-3531273
          # https://api.github.com/users/github-actions%5Bbot%5D
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          # Rebases the pull request branch on the latest changes from the main branch.
          git fetch --all
          git rebase origin/main
          # Switches to a new branch for the pull request.
          PR_BRANCH="build-$GITHUB_REF_NAME-$GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT"
          git switch -c $PR_BRANCH
          # Adds the built binaries to the commit.
          ls -lha
          git status
          git add .
          # Commits the changes with a message.
          git commit -m "Add binaries."
          # Pushes the commit to the pull request branch.
          git push -u origin $PR_BRANCH
          gh pr create -B main -t "[$GITHUB_REF_NAME]: Build gptc for all distros." -b "This pull request was generated from a Github Action and needs manual approval."
